{
    "feature_args":{"interval":30},
    "name": "account_vendor_hour_last{interval}_ctr",
    "keys": ["Id_Zid", "Media_VendorId", "Bid_CompanyId", "EventDate", "Time_Hour"],
    "values": ["a{account}_v{vendor}_hour_last{interval}_imp", "a{account}_v{vendor}_hour_last{interval}_clk", "a{account}_v{vendor}_hour_last{interval}_ctr"],
    "sql": "\nselect \n    Id_Zid,\n    Bid_CompanyId,\n    Media_VendorId,\n    CLK as a{account}_v{vendor}_hour_last{interval}_clk,\n    IMP as a{account}_v{vendor}_hour_last{interval}_imp,\n    Time_Hour,\n    case\n            when CLK > IMP then 1.0\n            when CLK <= IMP then floor(CLK/IMP*1.0,1)\n            else null\n    end as a{account}_v{vendor}_hour_last{interval}_ctr,\n    toDate('{target_day:%Y-%m-%d}') as EventDate\nfrom\n(\n    select\n        Id_Zid,\n        sum(length(Click.Timestamp)) as CLK,\n        sum(length(Impression.Timestamp)) as  IMP,\n        Bid_CompanyId,\n        Media_VendorId,\n        Time_Hour    \n    from\n        zampda.rtb_all\n    prewhere\n        EventDate >= toDate('{target_day:%Y-%m-%d}') -{interval} \n        and EventDate <= toDate('{target_day:%Y-%m-%d}') -1 \n        and TotalErrorCode=0\n    where\n        Bid_CompanyId = {account}\n        and notEmpty(Impression.Timestamp)\n        and Media_VendorId =  {vendor}\n    group by Id_Zid,Bid_CompanyId,Media_VendorId,Time_Hour\n)\n\n",
    "data_date_col": "target_day",
    "output_name": "a{account}_v{vendor}_t{target_day:%Y%m%d}"
}
